name: .NET Core

on:
  push:
    branches: [ master ]
    paths: 
      - apis/poi/**
      - .github/workflows/poi.yml
  pull_request:
    branches: [ master ]
    paths: 
      - apis/poi/**
      - .github/workflows/poi.yml

jobs:
  test:

    runs-on: ubuntu-latest
    env:
      working-directory: apis/poi/web

    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.301
    - name: show folder
      run: pwd
#    - working-directory: ${{env.working-directory}}
    - name: Install dependencies
      run: dotnet restore apis/poi/web/poi.csproj
#    - working-directory: ${{env.working-directory}}
    - name: Build
      run: dotnet build --configuration Release --no-restore apis/poi/web/poi.csproj
#    - working-directory: ${{env.working-directory}} 
    - name: Test
      run: dotnet test --no-restore --verbosity normal --logger "console;verbosity=detailed" apis/poi/tests/UnitTests/UnitTests.csproj
    - uses: actions/github-script@0.9.0
      if: failure()
      with:
        github-token: ${{secrets.GITHUB_TOKEN}}
        script: |
          let body = "${{ env.build_name }} Worflow Failure \n Build Number: ${{ github.run_number }} \n Build Log: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }} \n SHA: [${{ github.sha }}](https://github.com/${{ github.repository }}/commit/${{ github.sha }}) \n";
          github.issues.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: "${{ env.build_name }} Workflow ${{ github.run_number }} Failed! ",
            body: body
          });  
  build:
    needs: [test]
    runs-on: ubuntu-latest
    env:
        working-directory: ./apis/poi/web
        app-name: openhackf4r03460poi
        image-name: poi
        container-registry: docker.pkg.github.com
        docker-username: "cdennig"
    if: github.ref == 'refs/heads/master'
    steps:
    - uses: actions/checkout@v2    
    - name: Build & Push Image
      working-directory: ${{ env.working-directory }}
      run: |
        docker login ${{ env.container-registry }} --username ${{ github.actor }} --password ${{ secrets.GITHUB_TOKEN }}
        docker build -t ${{ env.container-registry }}/cdennig/openhackteam4/${{ env.image-name }}:${{ github.sha }} .
        docker push ${{ env.container-registry }}/cdennig/openhackteam4/${{ env.image-name }}:${{ github.sha }}
  staging:
    needs: [build]
    runs-on: ubuntu-latest
    env:
        app-name: openhackf4r03460poi
        image-name: poi
        container-registry: docker.pkg.github.com
        docker-username: "cdennig"
    if: github.ref == 'refs/heads/master'
    steps:  
    - uses: actions/checkout@v2  
    - name: 'Login via Azure CLI'
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    - name: Set Web App CR authentication
      uses: Azure/appservice-settings@v1
      with:
       app-name: ${{ env.app-name }}
       slot-name: 'staging'
       app-settings-json: |
         [
             {
                 "name": "DOCKER_REGISTRY_SERVER_PASSWORD",
                 "value": "${{ secrets.PULL_PWD }}",
                 "slotSetting": true
             },
             {
                 "name": "DOCKER_REGISTRY_SERVER_URL",
                 "value": "https://${{ env.container-registry }}",
                 "slotSetting": true
             },
             {
                 "name": "DOCKER_REGISTRY_SERVER_USERNAME",
                 "value": "${{ env.docker-username }}",
                 "slotSetting": true
             }
         ]
    - uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ env.app-name }}
        slot-name: 'staging'
        images: '${{ env.container-registry }}/cdennig/openhackteam4/${{ env.image-name }}:${{ github.sha }}'
    - name: Staging healthy?
      run: |
        ./test.sh https://openhackf4r03460poi-staging.azurewebsites.net/api/healthcheck/poi
    - uses: actions/github-script@0.9.0
      if: failure()
      with:
        github-token: ${{secrets.GITHUB_TOKEN}}
        script: |
          let body = "${{ env.build_name }} Worflow Failure \n Build Number: ${{ github.run_number }} \n Build Log: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }} \n SHA: [${{ github.sha }}](https://github.com/${{ github.repository }}/commit/${{ github.sha }}) \n";
          github.issues.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: "${{ env.build_name }} Workflow ${{ github.run_number }} Failed! Error in staging slot of API.",
            body: body
          });