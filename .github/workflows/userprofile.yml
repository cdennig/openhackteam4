# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  push:
    branches: [ master ]
    paths: 
      - 'apis/userprofile/**'
      - '.github/workflows/userprofile.yml'
  pull_request:
    branches: [ master ]
    paths: 
      - 'apis/userprofile/**'
      - '.github/workflows/userprofile.yml'
    
jobs:
  test:
    runs-on: ubuntu-latest
    env:
        working-directory: ./apis/userprofile
    strategy:
      matrix:
        node-version: [12.x]

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - run: |
           cd apis/userprofile
           npm install
    - run: |
           cd apis/userprofile
           npm run test
    - uses: actions/github-script@0.9.0
      if: failure()
      with:
        github-token: ${{secrets.GITHUB_TOKEN}}
        script: |
          let body = "${{ env.build_name }} Worflow Failure \n Build Number: ${{ github.run_number }} \n Build Log: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }} \n SHA: [${{ github.sha }}](https://github.com/${{ github.repository }}/commit/${{ github.sha }}) \n";
          github.issues.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: "${{ env.build_name }} Workflow ${{ github.run_number }} Failed! ",
            body: body
          });
  build:
    needs: [test]
    runs-on: ubuntu-latest
    env:
        working-directory: ./apis/userprofile
        app-name: openhackf4r03460userprofile
        image-name: userprofile
        container-registry: docker.pkg.github.com
        docker-username: "cdennig"
    if: github.ref == 'refs/heads/master'
    steps:
    - uses: actions/checkout@v2    
    - name: Build & Push Image
      working-directory: ${{ env.working-directory }}
      run: |
        docker login ${{ env.container-registry }} --username ${{ github.actor }} --password ${{ secrets.GITHUB_TOKEN }}
        docker build -t ${{ env.container-registry }}/cdennig/openhackteam4/${{ env.image-name }}:${{ github.sha }} .
        docker push ${{ env.container-registry }}/cdennig/openhackteam4/${{ env.image-name }}:${{ github.sha }}
    - name: 'Login via Azure CLI'
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    - name: Set Web App CR authentication
      uses: Azure/appservice-settings@v1
      with:
       app-name: ${{ env.app-name }}
       slot-name: 'staging'
       app-settings-json: |
         [
             {
                 "name": "DOCKER_REGISTRY_SERVER_PASSWORD",
                 "value": "${{ secrets.PULL_PWD }}",
                 "slotSetting": true
             },
             {
                 "name": "DOCKER_REGISTRY_SERVER_URL",
                 "value": "https://${{ env.container-registry }}",
                 "slotSetting": true
             },
             {
                 "name": "DOCKER_REGISTRY_SERVER_USERNAME",
                 "value": "${{ env.docker-username }}",
                 "slotSetting": true
             }
         ]
    - uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ env.app-name }}
        slot-name: 'staging'
        images: '${{ env.container-registry }}/cdennig/openhackteam4/${{ env.image-name }}:${{ github.sha }}'
    # - name: Swap slots
    #   uses: azure/CLI@v1
    #   with:
    #     azcliversion: 2.11.1
    #     inlineScript: |
    #       az webapp deployment slot swap --name openhackf4r03460userprofile --resource-group openhackf4r03460rg --slot staging --target-slot production
